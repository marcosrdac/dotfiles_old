#!/bin/sh

WALLPAPERS="${XDG_WALLPAPER_DIR:-$HOME/res/wal}"
WAL_TEMPLATES="${XDG_CONFIG_HOME:-"$HOME/.config"}/wal/templates"
WAL_CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/wal"
WALLPAPER="${WALLPAPER:-"$XDG_DATA_HOME/wallpaper"}"


INPUT_PATH="${1:-"$WALLPAPERS"}"


awaken_hidden ()  # produces blank lines for some reason...
{ 
  #xdotool search --class "$1" >/dev/null ||
    for i in {1..2}
      do bspwm_toggle_hidden "$1"
    done 
}

export_templates ()
{
  # this function copies output of "*.base" template links from wal cache to
  # their original folder without the ".base" ending. Requires wal template
  # folder links all ending with ".base".
  for name in `ls $WAL_TEMPLATES`
  do
    template="$WAL_TEMPLATES/$name"
    if [ -L "$template" ]
    then
      cache="$WAL_CACHE/$name"
      realtemplate=`realpath $template`
      wo_base=${realtemplate%.*}
      cp "$cache" "$wo_base" &
    fi
  done
}


# Program start

for class in dropdown_terminal dropdown_mail dropdown_calculator dropdown_music_player
do
  awaken_hidden "$class"
done

IMAGE_PATH=$(wal_set.py "$INPUT_PATH")
[ $? -ne 0 ] && exit 1
echo "$IMAGE_PATH" > "$WALLPAPER"
# update resources
xrdb -merge "$WAL_CACHE/colors.Xresources"
# set wallpaper
xwallpaper --zoom "$IMAGE_PATH" &
# source colors
. "$WAL_CACHE/colors.sh"


# update program colors
export_templates


## polybar
pgrep -x polybar >/dev/null && pkill -USR1 polybar & polybar_pid=$!
## dunst
dunst_start >/dev/null & dunst_pid=$!
## qutebrowser
pgrep -x qutebrowser >/dev/null && qutereload.py &
## bspwm
if `pgrep -x bspwm >/dev/null`
then
  bspc config normal_border_color   $color8 &
  bspc config focused_border_color  $color15 &
  bspc config presel_feedback_color $color15 &
fi


wait $polybar_pid && wait $dunst_pid && notify-send "New theme set!"
