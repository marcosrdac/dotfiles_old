#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).
#
# The color will gradually change for a percentage below 85%, and the urgency
# (exit code 33) is set if there is less that 5% remaining.

use strict;
use warnings;
use utf8;
use open ':std', ':encoding(UTF-8)';

my $acpi;
my $status;
my $percent;
my $full_text;
my $short_text;
my $bat_number = $ENV{BLOCK_INSTANCE} || 0;

# read the first line of the "acpi" command output
open (ACPI, "acpi -b | grep 'Battery $bat_number' |") or die;
$acpi = <ACPI>;
close(ACPI);

# fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
	die "$acpi\n";
}

label="<span font='Font Awesome 5 Free Solid 11'> </span>"
$status = $1;
$percent = $2;
$full_text = "$label$percent%";


# f47e
# 
# Name:
# hourglass
# Unicode:
# f254
# 
# Name:
# hourglass-end
# Unicode:
# f253
# 
# Name:
# hourglass-half
# Unicode:
# f252
# 
# Name:
# hourglass-start
# Unicode:

#   #  Ampulheta
#Font Awesome 5 Free Solid
if ($status eq 'Discharging') {
	$full_text .= " <span font='Font Awesome 5 Free Solid 11'> </span>";
} elsif ($status eq 'Charging') {
	$full_text .= " <span font='Font Awesome 5 Free Solid 11'> </span>";
}

$short_text = $full_text;

if ($acpi =~ /(\d\d):(\d\d):(\d\d)/) {
	$full_text .= " $1$2$3";
}


print "${label}${full_text}\n";
print "${label}$short_text\n";

# consider color and urgent flag only on discharge
if ($status eq 'Discharging') {

	if ($percent < 20) {
		print "#B85C8C\n";  # B85C8C
	} elsif ($percent < 40) {
		print "#58b058\n";
	} elsif ($percent < 60) {
		print "#FDB3BD\n";
	} elsif ($percent < 85) {
		print "#B9CEFA\n";
	}

	if ($percent < 5) {
		exit(33);
	}
}

exit(0);
